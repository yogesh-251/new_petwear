// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  orders    Order[]
  cart      Cart?
  createdAt DateTime @default(now())
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String
  price       Float
  imageUrl    String
  categoryId  String
  category    Category    @relation(fields: [categoryId], references: [id])
  createdAt   DateTime    @default(now())
  CartItem    CartItem[]
  OrderItem   OrderItem[]
}

model Cart {
  id        String     @id @default(uuid())
  userId    String     @unique
  items     CartItem[]
  user      User       @relation(fields: [userId], references: [id])
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String  @id @default(uuid())
  cartId    String
  productId String
  quantity  Int     @default(1)
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  total     Float
  items     OrderItem[]
  status    String      @default("pending")
  createdAt DateTime    @default(now())
  updatedAt  DateTime     @updatedAt
  user      User        @relation(fields: [userId], references: [id])
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

